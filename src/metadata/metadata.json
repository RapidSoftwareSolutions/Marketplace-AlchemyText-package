{
  "package": "AlchemyText",
  "tagline": "Alchemy Text API",
  "description": "Analyze text for sentiment and broader concepts.",
  "image": "https:\/\/files.readme.io\/A1pb2VlDQUa7c3gNVSYa_alchemyapi_favicon.jpeg",
  "repo": "https:\/\/github.com\/RapidSoftwareSolutions\/Marketplace-AlchemyText-package",
  "keywords": [
    "API",
    "IBM",
    "bot",
    "bots",
    "chatbot",
    "cognitive",
    "emotion",
    "learning",
    "machine",
    "neural",
    "nlp",
    "sentiment",
    "text",
    "watson"
  ],
  "accounts": {
    "domain": "alchemyapi.com",
    "credentials": [
      "apiKey"
    ]
  },
  "steps": [
    "Go to AlchemyAPI and register your app (https://console.ng.bluemix.net/registration/)",
    "Choose Natural Language Understanding from categories (https://console.ng.bluemix.net/catalog/?taxonomyNavigation=applications)",
    "Connect Natural Language Understanding to your application at the left side, choose pricing plan and click on 'Create' button at the bottom of the page",
    "Click on 'Service Credentials' tab to see your apiKey"
  ],
  "blocks": [
    {
      "name": "getCombinedDataFromHtml",
      "description": "Analyze an HTML with multiple text analysis operations.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "extract",
          "type": "List",
          "structure": {
            "name": "method",
            "type": "Select",
            "options": [
              "authors",
              "concepts",
              "dates",
              "doc-emotion",
              "entities",
              "feeds",
              "keywords",
              "pub-date",
              "relations",
              "typed-rels",
              "doc-sentiment",
              "taxonomy",
              "title"
            ],
            "info": "Single method"
          },
          "info": "List of any of the following methods: authors, concepts (default), dates, doc-emotion, entities (default), feeds, keywords (default), pub-date, relations, typed-rels, doc-sentiment, taxonomy (default), title",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getCombinedDataFromUrl",
      "description": "Analyze an URL with multiple text analysis operations.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "extract",
          "type": "List",
          "structure": {
            "name": "method",
            "type": "Select",
            "options": [
              "authors",
              "concepts",
              "dates",
              "doc-emotion",
              "entities",
              "feeds",
              "keywords",
              "pub-date",
              "relations",
              "typed-rels",
              "doc-sentiment",
              "taxonomy",
              "title"
            ],
            "info": "Single method"
          },
          "info": "List of any of the following methods: authors, concepts (default), dates, doc-emotion, entities (default), feeds, keywords (default), pub-date, relations, typed-rels, doc-sentiment, taxonomy (default), title",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getCombinedDataFromText",
      "description": "Analyze a TEXT with multiple text analysis operations.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with Text content.",
          "required": true
        },
        {
          "name": "extract",
          "type": "List",
          "structure": {
            "name": "method",
            "type": "Select",
            "options": [
              "authors",
              "concepts",
              "dates",
              "doc-emotion",
              "entities",
              "feeds",
              "keywords",
              "pub-date",
              "relations",
              "typed-rels",
              "doc-sentiment",
              "taxonomy",
              "title"
            ],
            "info": "Single method"
          },
          "info": "List of any of the following methods: authors, concepts (default), dates, doc-emotion, entities (default), feeds, keywords (default), pub-date, relations, typed-rels, doc-sentiment, taxonomy (default), title",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAuthorsFromHtml",
      "description": "Get author names from an HTML document.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAuthorsFromUrl",
      "description": "Get author names from a webpage.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedConceptsFromHtml",
      "description": "Extract concepts from text of an HTML document. Supported languages: English, Spanish",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of concepts to extract (default = 8, maximum = 50)",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "linkedData",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide Linked Data content links in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedConceptsFromUrl",
      "description": "Extract concepts from a webpage. Supported languages: English, Spanish",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of concepts to extract (default = 8, maximum = 50)",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "linkedData",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide Linked Data content links in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedConceptsFromText",
      "description": "Extract concepts from plain text. Supported languages: English, Spanish",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with text content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of concepts to extract (default = 8, maximum = 50)",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "linkedData",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide Linked Data content links in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "extractDatesFromHtml",
      "description": "Extract dates from an HTML content. Supported languages: English",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "anchorDate",
          "type": "DatePicker",
          "info": "The date to use as \"today\" when interpreting phrases in the text like \"next tuesday.\". Format: yyyy-mm-dd hh:mm:ss",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "extractDatesFromUrl",
      "description": "Extract dates from a webpage. Supported languages: English",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "anchorDate",
          "type": "DatePicker",
          "info": "The date to use as \"today\" when interpreting phrases in the text like \"next tuesday.\". Format: yyyy-mm-dd hh:mm:ss",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "extractDatesFromText",
      "description": "Extract dates from plain text. Supported languages: English",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "String",
          "info": "Text content.",
          "required": true
        },
        {
          "name": "anchorDate",
          "type": "DatePicker",
          "info": "The date to use as \"today\" when interpreting phrases in the text like \"next tuesday.\". Format: yyyy-mm-dd hh:mm:ss",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getEmotionFromHtml",
      "description": "Detect emotions implied in the text of an HTML document. Supported languages: English",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getEmotionFromUrl",
      "description": "Detect emotions implied in the text on a webpage. Supported languages: English",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getEmotionFromText",
      "description": "Detect emotions implied in plain text. Supported languages: English",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with text content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTargetedEmotionFromHtml",
      "description": "Detect emotions directed toward targeted phrases in an HTML document. Supported languages: English",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "targets",
          "type": "List",
          "structure": {
            "name": "target",
            "type": "String",
            "info": "Single target"
          },
          "info": "Array of phrases. The service will analyze emotion directed toward each phrase that is found in the source text. Supports up to 20 phrases. ",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response. Parameter is only used if indicated html or text parameter.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTargetedEmotionFromUrl",
      "description": "Detect emotions directed toward targeted phrases on webpage. Supported languages: English",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL",
          "required": true
        },
        {
          "name": "targets",
          "type": "List",
          "structure": {
            "name": "target",
            "type": "String",
            "info": "Single target"
          },
          "info": "Array of phrases. The service will analyze emotion directed toward each phrase that is found in the source text. Supports up to 20 phrases. ",
          "required": true
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTargetedEmotionFromText",
      "description": "Detect emotions directed toward targeted phrases in text. Supported languages: English",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "String",
          "info": "Text content.",
          "required": true
        },
        {
          "name": "targets",
          "type": "List",
          "structure": {
            "name": "target",
            "type": "String",
            "info": "Single target"
          },
          "info": "Array of phrases. The service will analyze emotion directed toward each phrase that is found in the source text. Supports up to 20 phrases. ",
          "required": true
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedNamedEntitiesFromHtml",
      "description": "Extract entities from an HTML document. Supported languages: English, French, German, Italian, Portuguese, Russian, Spanish, Swedish",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of entities to return (default = 50)",
          "required": false
        },
        {
          "name": "model",
          "type": "String",
          "info": "Specify a custom model ID here to override the default Alchemy entity extraction model. See README for more details.",
          "required": false
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "coreference",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to treat coreferences as separate entities (coreferences are resolved into detected entities by default).",
          "required": false
        },
        {
          "name": "disambiguate",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide entity disambiguation information in the response.",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "linkedData",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide Linked Data content links in the response.",
          "required": false
        },
        {
          "name": "quotations",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include quotations that are linked to detected entities.",
          "required": false
        },
        {
          "name": "emotion",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze emotions associated with each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "sentiment",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze the sentiment towards each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "structuredEntities",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to ignore structured entities, such as Quantity, EmailAddress, TwitterHandle, Hashtag, and IPAddress.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedNamedEntitiesFromUrl",
      "description": "Extract entities from a webpage. Supported languages: English, French, German, Italian, Portuguese, Russian, Spanish, Swedish",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL",
          "required": true
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of entities to return (default = 50)",
          "required": false
        },
        {
          "name": "model",
          "type": "String",
          "info": "Specify a custom model ID here to override the default Alchemy entity extraction model. See README for more details.",
          "required": false
        },
        {
          "name": "coreference",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to treat coreferences as separate entities (coreferences are resolved into detected entities by default).",
          "required": false
        },
        {
          "name": "disambiguate",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide entity disambiguation information in the response.",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "linkedData",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide Linked Data content links in the response.",
          "required": false
        },
        {
          "name": "quotations",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include quotations that are linked to detected entities.",
          "required": false
        },
        {
          "name": "emotion",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze emotions associated with each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "sentiment",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze the sentiment towards each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "structuredEntities",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to ignore structured entities, such as Quantity, EmailAddress, TwitterHandle, Hashtag, and IPAddress.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedNamedEntitiesFromText",
      "description": "Extract entities from plain text. Supported languages: English, French, German, Italian, Portuguese, Russian, Spanish, Swedish",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with text content.",
          "required": true
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of entities to return (default = 50)",
          "required": false
        },
        {
          "name": "model",
          "type": "String",
          "info": "Specify a custom model ID here to override the default Alchemy entity extraction model. See README for more details.",
          "required": false
        },
        {
          "name": "coreference",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to treat coreferences as separate entities (coreferences are resolved into detected entities by default).",
          "required": false
        },
        {
          "name": "disambiguate",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide entity disambiguation information in the response.",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "linkedData",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide Linked Data content links in the response.",
          "required": false
        },
        {
          "name": "quotations",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include quotations that are linked to detected entities.",
          "required": false
        },
        {
          "name": "emotion",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze emotions associated with each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "sentiment",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze the sentiment towards each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "structuredEntities",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to ignore structured entities, such as Quantity, EmailAddress, TwitterHandle, Hashtag, and IPAddress.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getFeedLinksFromHtml",
      "description": "Extract RSS\/ATOM feed links from an HTML document.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getFeedLinksFromUrl",
      "description": "Extract RSS\/ATOM feed links from a webpage.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedKeywordsFromHtml",
      "description": "Extract keywords from an HTML document. Supported languages: English, French, German, Italian, Portuguese, Russian, Spanish, Swedish.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of keywords to return (default = 50)",
          "required": false
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "emotion",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze emotions associated with each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "sentiment",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze the sentiment towards each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedKeywordsFromUrl",
      "description": "Extract keywords from a webpage. Supported languages: English, French, German, Italian, Portuguese, Russian, Spanish, Swedish.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of keywords to return (default = 50)",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "emotion",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze emotions associated with each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "sentiment",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze the sentiment towards each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedKeywordsFromText",
      "description": "Extract keywords from a plain text. Supported languages: English, French, German, Italian, Portuguese, Russian, Spanish, Swedish.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with text content.",
          "required": true
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of keywords to return (default = 50)",
          "required": false
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "emotion",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze emotions associated with each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "sentiment",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze the sentiment towards each detected entity. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getLanguageFromHtml",
      "description": "Detect the language of an HTML document.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getLanguageFromUrl",
      "description": "Detect the language of a webpage.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getLanguageFromText",
      "description": "Detect the language of plain text.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with text content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getMicroformatDataFromHtml",
      "description": "Extract microformats from an HTML document.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getMicroformatDataFromUrl",
      "description": "Extract microformats from a webpage.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getPublicationDateFromHtml",
      "description": "Get the publication date of an HTML document.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getPublicationDateFromUrl",
      "description": "Get the publication date of a webpage.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRelationsFromHtml",
      "description": "Extract Subject-Action-Object relations from an HTML document. Supported languages: English, Spanish",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of entities to return (default = 50, maximum = 100).",
          "required": false
        },
        {
          "name": "keywords",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to identify keywords in detected relations. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "entities",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to identify named entities in detected relations. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "requireEntities",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to restrict results to relations that contain at least one named entity.",
          "required": false
        },
        {
          "name": "coreference",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to treat coreferences as separate entities (coreferences are resolved into detected entities by default).",
          "required": false
        },
        {
          "name": "disambiguate",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide entity disambiguation information in the response.",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "linkedData",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide Linked Data content links in the response.",
          "required": false
        },
        {
          "name": "sentiment",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze the sentiment towards each result. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "sentimentExcludeEntities",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to exclude named entity text from sentiment analysis. For exapmle, do not analyze \"New\" in \"New York\".",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRelationsFromUrl",
      "description": "Extract Subject-Action-Object relations from a webpage. Supported languages: English, Spanish",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of entities to return (default = 50, maximum = 100).",
          "required": false
        },
        {
          "name": "keywords",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to identify keywords in detected relations. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "entities",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to identify named entities in detected relations. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "requireEntities",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to restrict results to relations that contain at least one named entity.",
          "required": false
        },
        {
          "name": "coreference",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to treat coreferences as separate entities (coreferences are resolved into detected entities by default).",
          "required": false
        },
        {
          "name": "disambiguate",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide entity disambiguation information in the response.",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "linkedData",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide Linked Data content links in the response.",
          "required": false
        },
        {
          "name": "sentiment",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze the sentiment towards each result. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "sentimentExcludeEntities",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to exclude named entity text from sentiment analysis. For exapmle, do not analyze \"New\" in \"New York\".",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRelationsFromText",
      "description": "Extract Subject-Action-Object relations from plain text. Supported languages: English, Spanish",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with text content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "maxRetrieve",
          "type": "String",
          "info": "Maximum number of entities to return (default = 50, maximum = 100).",
          "required": false
        },
        {
          "name": "keywords",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to identify keywords in detected relations. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "entities",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to identify named entities in detected relations. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "requireEntities",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to restrict results to relations that contain at least one named entity.",
          "required": false
        },
        {
          "name": "coreference",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to treat coreferences as separate entities (coreferences are resolved into detected entities by default).",
          "required": false
        },
        {
          "name": "disambiguate",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide entity disambiguation information in the response.",
          "required": false
        },
        {
          "name": "knowledgeGraph",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include knowledge graph information in the results. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "linkedData",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to hide Linked Data content links in the response.",
          "required": false
        },
        {
          "name": "sentiment",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to analyze the sentiment towards each result. This incurs an additional transaction charge.",
          "required": false
        },
        {
          "name": "sentimentExcludeEntities",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to exclude named entity text from sentiment analysis. For exapmle, do not analyze \"New\" in \"New York\".",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTypedRelationsFromHtml",
      "description": "Use custom models to identify typed relations between detected entities in HTML document. Source text in Typed Relations calls is truncated to 5 KB. Typed relations identify different types of connections between detected entities. For example, the entities \"Oscar\" and \"Leonardo DiCaprio\" might be linked by an \"awardedTo\" relation. To tailor results for your domain, you can specify your own custom entities and relations with custom models in Watson Knowledge Studio.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "model",
          "type": "String",
          "info": "The unique alphanumeric identifier for your custom model. You can also choose from the following public models: en-news: trained on English news content (default); es-news: trained on Spanish news content; ar-news: trained on Arabic news content.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTypedRelationsFromUrl",
      "description": "Use custom models to identify typed relations between detected entities from a webpage. Source text in Typed Relations calls is truncated to 5 KB. Typed relations identify different types of connections between detected entities. For example, the entities \"Oscar\" and \"Leonardo DiCaprio\" might be linked by an \"awardedTo\" relation. To tailor results for your domain, you can specify your own custom entities and relations with custom models in Watson Knowledge Studio.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "model",
          "type": "String",
          "info": "The unique alphanumeric identifier for your custom model. You can also choose from the following public models: en-news: trained on English news content (default); es-news: trained on Spanish news content; ar-news: trained on Arabic news content.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTypedRelationsFromText",
      "description": "Use custom models to identify typed relations between detected entities in plain text. Source text in Typed Relations calls is truncated to 5 KB. Typed relations identify different types of connections between detected entities. For example, the entities \"Oscar\" and \"Leonardo DiCaprio\" might be linked by an \"awardedTo\" relation. To tailor results for your domain, you can specify your own custom entities and relations with custom models in Watson Knowledge Studio.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with text content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "model",
          "type": "String",
          "info": "The unique alphanumeric identifier for your custom model. You can also choose from the following public models: en-news: trained on English news content (default); es-news: trained on Spanish news content; ar-news: trained on Arabic news content.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTextSentimentFromHtml",
      "description": "Analyze the overall sentiment of HTML document. Supported languages: Arabic, English, French, German, Italian, Portuguese, Russian, Spanish.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response..",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTextSentimentFromUrl",
      "description": "Analyze the overall sentiment of a webpage. Supported languages: Arabic, English, French, German, Italian, Portuguese, Russian, Spanish.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTextSentimentFromText",
      "description": "Analyze the overall sentiment of plain text. Supported languages: Arabic, English, French, German, Italian, Portuguese, Russian, Spanish.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with text content.",
          "required": true
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTargetedSentimentFromHtml",
      "description": "Analyze sentiment for targeted phrases in an HTML document. Supported languages: Arabic, English, French, German, Italian, Portuguese, Russian, Spanish.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "targets",
          "type": "List",
          "structure": {
            "name": "target",
            "type": "String",
            "info": "Single target"
          },
          "info": "Array of phrases. The service will return sentiment information for each phrase that is found in the source text. Supports up to 20 phrases. ",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTargetedSentimentFromUrl",
      "description": "Analyze sentiment for targeted phrases on a webpage. Supported languages: Arabic, English, French, German, Italian, Portuguese, Russian, Spanish.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "targets",
          "type": "List",
          "structure": {
            "name": "target",
            "type": "String",
            "info": "Single target"
          },
          "info": "Array of phrases. The service will return sentiment information for each phrase that is found in the source text. Supports up to 20 phrases. ",
          "required": true
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTargetedSentimentFromText",
      "description": "Analyze sentiment for targeted phrases in plain text. Supported languages: Arabic, English, French, German, Italian, Portuguese, Russian, Spanish.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with text content.",
          "required": true
        },
        {
          "name": "targets",
          "type": "List",
          "structure": {
            "name": "target",
            "type": "String",
            "info": "Single target"
          },
          "info": "Array of phrases. The service will return sentiment information for each phrase that is found in the source text. Supports up to 20 phrases. ",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedTaxonomyFromHtml",
      "description": "Categorize an HTML document into a 5-level taxonomy. Supported languages: English.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedTaxonomyFromUrl",
      "description": "Categorize a webpage into a 5-level taxonomy. Supported languages: English.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRankedTaxonomyFromText",
      "description": "Categorize plain text into a 5-level taxonomy. Supported languages: English.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "text",
          "type": "File",
          "info": "File with text content.",
          "required": true
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTextFromHtml",
      "description": "Extract primary text content from an HTML document. Cleaned page text is obtained by default in other HTML and URL functions. You can view the results of page cleaning in responses from most of the other methods by passing showSourceText=1.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "extractLinks",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include hyperlinks in the extracted text.",
          "required": false
        },
        {
          "name": "useMetadata",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to ignore description information in webpage metadata.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTextFromUrl",
      "description": "Extract primary text content from a webpage. Cleaned page text is obtained by default in other HTML and URL functions. You can view the results of page cleaning in responses from most of the other methods by passing showSourceText=1.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "showSourceText",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include the source text in the response.",
          "required": false
        },
        {
          "name": "extractLinks",
          "type": "Select",
          "options": [
            "1"
          ],
          "info": "Set this to 1 to include hyperlinks in the extracted text.",
          "required": false
        },
        {
          "name": "useMetadata",
          "type": "Select",
          "options": [
            "0"
          ],
          "info": "Set this to 0 to ignore description information in webpage metadata.",
          "required": false
        },
        {
          "name": "cquery",
          "type": "String",
          "info": "A visual constraints query to apply to the web page. Required when sourceText is set to cquery. For more details visit http:\/\/www.ibm.com\/watson\/developercloud\/doc\/alchemylanguage\/visual_constraints.shtml. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "xpath",
          "type": "String",
          "info": "An XPath query to apply to the web page. Required when sourceText is set to one of the XPath values. Parameter is only used if indicated html or url parameter.",
          "required": false
        },
        {
          "name": "sourceText",
          "type": "Select",
          "options": [
            "cleaned_or_raw",
            "cleaned",
            "raw",
            "cquery",
            "xpath",
            "xpath_or_raw",
            "cleaned_and_xpath"
          ],
          "info": "How to obtain the source text from the webpage. For more details see README. Parameter is only used if indicated html or url parameter.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRawTextFromHtml",
      "description": "Extract the plain text from an HTML document.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRawTextFromUrl",
      "description": "Extract the plain text from a webpage.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTitleFromHtml",
      "description": "Extract the page title from an HTML document.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "html",
          "type": "File",
          "info": "File with HTML content.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "Input here will appear as the url value in the response.",
          "required": false
        },
        {
          "name": "useMetadata",
          "type": "Select",
          "options": [
            "1",
            "0"
          ],
          "info": "1 or 0. Whether to use title information from the web page metadata (default = 1: enabled).",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTitleFromUrl",
      "description": "Extract the page title from a webpage.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "url",
          "type": "String",
          "info": "HTTP URL.",
          "required": true
        },
        {
          "name": "useMetadata",
          "type": "Select",
          "options": [
            "1",
            "0"
          ],
          "info": "1 or 0. Whether to use title information from the web page metadata (default = 1: enabled).",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getModels",
      "description": "This endpoint allow you to manage custom models that are deployed to your AlchemyAPI service instance. With an Advanced pricing plan and access to Watson Knowledge Studio, you can create your own custom model that specializes in understanding entities and relations that are unique to your domain.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteSingleModel",
      "description": "Deletes a custom model that was deployed to your AlchemyAPI service instance from Watson Knowledge Studio.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key obtained from AlchemyAPI.",
          "required": true
        },
        {
          "name": "modelId",
          "type": "credentials",
          "info": "The unique identifier for the model that you want to delete.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    }
  ]
}
